# Ultralytics YOLO 🚀, AGPL-3.0 license
# Default training settings and hyperparameters for medium-augmentation COCO training

task: detect  # (str) YOLO task, i.e. detect, segment, classify, pose
mode: train  # (str) YOLO mode, i.e. train, val, predict, export, track, benchmark

# Train settings -------------------------------------------------------------------------------------------------------
model:  # (str, optional) 模型文件的路径
data:  # (str, optional) 数据文件的路径
epochs: 100  # (int) 训练的轮数
patience: 50  # (int) 早停的等待轮数(一定轮数内模型性能没有明显提升则停止 早停能减少过拟合)
batch: 16  # (int) 每个批次中的图像数量(-1自动调整批次大小 直至显卡能容纳的最多图像数量)
imgsz: 640  # (int | list) 输入图像的尺寸,可指定边长或宽高组合
save: True  # (bool) 是否保存训练的检查点和预测结果
save_period: -1 # (int) 保存检查点的间隔 -1禁用该功能
cache: False  # (bool) 数据加载时是否使用缓存(True/ram, disk or False)
device:  # (int | str | list, optional) 训练运行的设备(cuda device=0 or device=0,1,2,3 or device=cpu)
workers: 8  # (int) 数据加载时的工作线程数 windows系统下需为0
project:  # (str, optional) 项目名称
name:  # (str, optional) 实验名称 results saved to 'project/name' directory
exist_ok: False  # (bool) 是否覆盖现有的实验
pretrained: True  # (bool | str) 是否使用预训练模型
optimizer: auto  # (str) 要使用的优化器 choices=[SGD, Adam, Adamax, AdamW, NAdam, RAdam, RMSProp, auto]
verbose: True  # (bool) 是否打印详细输出
seed: 0  # (int) 随机种子，用于实现可重复性
deterministic: True  # (bool) 是否启用确定性模式
single_cls: False  # (bool) 将多类数据训练为单类
rect: False  # (bool) 使用矩形训练 每个批次进行最小填充
cos_lr: False  # (bool) 使用余弦学习率调度器
close_mosaic: 10  # (int) 禁用mosaic增强的最后第几个伦次
resume: False  # (bool) 从最后一个检查点恢复训练
amp: True  # (bool) 是否使用自动混合精度
fraction: 1.0  # (float) 要训练的数据集分数
profile: False  # (bool) 在记录器训练期间分析ONNX和TensorRT的速度
freeze: None  # (int | list, optional) 冻结前n层, 或训练期间冻结层索引列表
# Segmentation
overlap_mask: True  # (bool) 训练是否要求蒙版重叠(仅用于分割训练)
mask_ratio: 4  # (int) 蒙版下采样比例(仅用于分割训练)
# Classification
dropout: 0.0  # (float) 是否使用丢弃正则比 (classify train only)

# Val/Test settings ----------------------------------------------------------------------------------------------------
val: True  # (bool) validate/test during training
split: val  # (str) dataset split to use for validation, i.e. 'val', 'test' or 'train'
save_json: False  # (bool) save results to JSON file
save_hybrid: False  # (bool) save hybrid version of labels (labels + additional predictions)
conf:  # (float, optional) object confidence threshold for detection (default 0.25 predict, 0.001 val)
iou: 0.7  # (float) intersection over union (IoU) threshold for NMS
max_det: 300  # (int) maximum number of detections per image
half: False  # (bool) use half precision (FP16)
dnn: False  # (bool) use OpenCV DNN for ONNX inference
plots: True  # (bool) save plots during train/val

# Prediction settings --------------------------------------------------------------------------------------------------
source:  # (str, optional) source directory for images or videos
show: False  # (bool) show results if possible
save_txt: False  # (bool) save results as .txt file
save_conf: False  # (bool) save results with confidence scores
save_crop: False  # (bool) save cropped images with results
show_labels: True  # (bool) show object labels in plots
show_conf: True  # (bool) show object confidence scores in plots
vid_stride: 1  # (int) video frame-rate stride
stream_buffer: False  # (bool) buffer all streaming frames (True) or return the most recent frame (False)
line_width:   # (int, optional) line width of the bounding boxes, auto if missing
visualize: False  # (bool) visualize model features
augment: False  # (bool) apply image augmentation to prediction sources
agnostic_nms: False  # (bool) class-agnostic NMS
classes:  # (int | list[int], optional) filter results by class, i.e. classes=0, or classes=[0,2,3]
retina_masks: False  # (bool) use high-resolution segmentation masks
boxes: True  # (bool) Show boxes in segmentation predictions

# Export settings ------------------------------------------------------------------------------------------------------
format: torchscript  # (str) format to export to, choices at https://docs.ultralytics.com/modes/export/#export-formats
keras: False  # (bool) use Kera=s
optimize: False  # (bool) TorchScript: optimize for mobile
int8: False  # (bool) CoreML/TF INT8 quantization
dynamic: False  # (bool) ONNX/TF/TensorRT: dynamic axes
simplify: False  # (bool) ONNX: simplify model
opset:  # (int, optional) ONNX: opset version
workspace: 4  # (int) TensorRT: workspace size (GB)
nms: False  # (bool) CoreML: add NMS

# Hyperparameters ------------------------------------------------------------------------------------------------------
lr0: 0.01  # (float) initial learning rate (i.e. SGD=1E-2, Adam=1E-3)
lrf: 0.01  # (float) final learning rate (lr0 * lrf)
momentum: 0.937  # (float) SGD momentum/Adam beta1
weight_decay: 0.0005  # (float) optimizer weight decay 5e-4
warmup_epochs: 3.0  # (float) warmup epochs (fractions ok)
warmup_momentum: 0.8  # (float) warmup initial momentum
warmup_bias_lr: 0.1  # (float) warmup initial bias lr
box: 7.5  # (float) box loss gain
cls: 0.5  # (float) cls loss gain (scale with pixels)
dfl: 1.5  # (float) dfl loss gain
pose: 12.0  # (float) pose loss gain
kobj: 1.0  # (float) keypoint obj loss gain
label_smoothing: 0.0  # (float) label smoothing (fraction)
nbs: 64  # (int) nominal batch size
hsv_h: 0.015  # (float) image HSV-Hue augmentation (fraction)
hsv_s: 0.7  # (float) image HSV-Saturation augmentation (fraction)
hsv_v: 0.4  # (float) image HSV-Value augmentation (fraction)
degrees: 0.0  # (float) image rotation (+/- deg)
translate: 0.1  # (float) image translation (+/- fraction)
scale: 0.5  # (float) image scale (+/- gain)
shear: 0.0  # (float) image shear (+/- deg)
perspective: 0.0  # (float) image perspective (+/- fraction), range 0-0.001
flipud: 0.0  # (float) image flip up-down (probability)
fliplr: 0.5  # (float) image flip left-right (probability)
mosaic: 1.0  # (float) image mosaic (probability)
mixup: 0.0  # (float) image mixup (probability)
copy_paste: 0.0  # (float) segment copy-paste (probability)

# Custom config.yaml ---------------------------------------------------------------------------------------------------
cfg:  # (str, optional) for overriding defaults.yaml

# Tracker settings ------------------------------------------------------------------------------------------------------
tracker: botsort.yaml  # (str) tracker type, choices=[botsort.yaml, bytetrack.yaml]
